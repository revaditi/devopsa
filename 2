sudo apt update
sudo apt install openjdk-17-jdk -y

java --version

sudo update-alternatives --config java

gradle -v

sudo apt remove gradle -y

ls ~/.sdkman

sdk uninstall gradle <version?> --force

sudo apt install maven -y

mvn -version

wget https://services.gradle.org/distributions/gradle-8.14-bin.zip -P /tmp
sudo unzip -d /opt/gradle /tmp/gradle-8.14-bin.zip

gedit ~/.bashrc

export GRADLE_HOME=/opt/gradle/gradle-8.14
export PATH=${GRADLE_HOME}/bin:${PATH}

source ~/.bashrc

gradle -v


cd ~
mkdir HelloGradleGroovy
cd HelloGradleGroovy
gradle init --type java-application --dsl groovy --overwrite



tree



gedit app/build.gradle



plugins {
    // Apply the Java plugin for compiling Java code
    id 'java'
    // Apply the application plugin to add support for building an application
    id 'application'
}

group = 'org.example'
version = '1.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Define your dependencies. Use JUnit Jupiter (JUnit 5) for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    // If using parameterized tests
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

// A custom task example: printing a greeting
task hello {
    doLast {
        println 'Hello, Gradle!'
    }
}






dependencies{
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0' 
    // Example: Adding a test dependency
}



gradle build

gradle run

gradle hello



cd ~
mkdir HelloGradleKotlin
cd HelloGradleKotlin
gradle init --type java-application --dsl kotlin --overwrite




tree





gedit app/build.gradle.kts




plugins {
    // Apply the Java plugin for compiling Java code
    java
    // Apply the application plugin to add support for building an application
    application
}

group = "org.example"
version = "1.0"

repositories {
    mavenCentral() // Configures Maven Central for dependencies
}

dependencies {
    // Define dependencies using Kotlin DSL syntax. Use JUnit Jupiter (JUnit 5) for testing.
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.10.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.10.0")
    // If using parameterized tests
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.10.0")
}

application {
    mainClass.set("org.example.App") // Specifies the main class
}

// A custom task example using Kotlin DSL
tasks.register("hello") {
    doLast {
        println("Hello, Gradle with Kotlin DSL!")
    }
}








dependencies {
    // Example: Adding JUnit Jupiter (JUnit 5) test dependencies
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.10.0")
}




gradle build

gradle run/

gradle hello

